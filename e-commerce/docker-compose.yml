version: '3.9'

services:
   #################################################### APACHE SERVERS ####################################################
   
   # Apache server representing the DataStorage container that acts as a REST api for MongoDB 
   data_storage:
      build: ./DataStorage
      container_name: data-storage
      restart: always
      networks:
        default:
           ipv4_address: 172.18.1.14
      hostname: DataStorage
      volumes:
         - ./DataStorage:/var/www/html/

   # Apache server hosting the WebApp frontend client for users to interact with
   client:
      build: ./WebApp
      container_name: web-app
      restart: always
      networks:
         default:
            ipv4_address: 172.18.1.9
      ports:
         - "80:80"
      volumes:
         - ./WebApp:/var/www/html/
         
   # Container that transfers requests back and forth between WebApp and other target backend services using cURL in PHP
   app_logic:
      build: ./AppLogic
      container_name: app-logic
      restart: always
      networks:
         default:
            ipv4_address: 172.18.1.8
      ports:
         - "81:80"
      volumes:
         - ./AppLogic:/var/www/html/
         - ./WebApp/assets/products:/var/www/html/assets/products
   
   ###################################################### DATABASES ######################################################
   
   # MySQL database for storing data pertaining to FIWARE's Keyrock Identity Management (Idm) microservice
   mysql_db:
      image: mysql:5.7
      container_name: mysql_db
      restart: always
      networks:
         default:
            ipv4_address: 172.18.1.6
      ports:
         - "3306:3306"
      environment:
         - 'MYSQL_ROOT_HOST=%'
         - 'MYSQL_ROOT_PASSWORD=secret'
         - 'MYSQL_DATABASE=idm'
      volumes:
         - mysql-db:/var/lib/mysql
         - ./KeyrockIDM:/docker-entrypoint-initdb.d
   
   # Mongo database for storing data pertaining to the Application itself and Orion Context broker
   mongo_db:
      image: mongo:6.0.3
      container_name: mongo_db
      restart: always
      networks:
        default:
          ipv4_address: 172.18.1.10
      environment:
         - MONGO_INITDB_ROOT_USERNAME=root
         - MONGO_INITDB_ROOT_PASSWORD=secret
      ports: 
         - "27017:27017"
      volumes: 
         - mongo-db:/data/db
   
   # Helper container in order to seed mongo_db, terminates upon finishing importing estore.Products collection  
   mongo-seed:
      build: ./mongo-seed
      depends_on: 
         - mongo_db
   
   #################################################### FIWARE SERVICES ####################################################             
   
   # FIWARE's Keyrock IDM utility for user authentication/authorization regarding our app and its resources
   keyrock_idm:
      image: fiware/idm:7.8.1
      container_name: keyrock_idm
      hostname: keyrock_idm
      networks:
         default:
            ipv4_address: 172.18.1.5
      depends_on:
         - mysql_db
      ports:
         - "3005:3005"
         - "443:443"
      environment:
         - DEBUG=idm:*
         - IDM_HOST=http://localhost:3005
         - IDM_PORT=3005
         - IDM_DB_HOST=mysql_db
         - IDM_DB_PASS=secret
         - IDM_DB_USER=root
         - IDM_ADMIN_USER=pkalaitzakis
         - IDM_ADMIN_EMAIL=pkalaitzakis@test.com
         - IDM_ADMIN_PASS=1234
         
   # FIWARE's Wilma PEP-Proxy utility for protecting data storage apache server (MongoDB REST api)
   data_storage_wilma_pep_proxy:
      image: fiware/pep-proxy:8.3.0
      container_name: data_storage_wilma
      networks:
         default:
            ipv4_address: 172.18.1.21
      depends_on:
         - keyrock_idm
      ports:
         - "1028:1027"
      expose: 
         - "1028"
      environment: 
         - PEP_PROXY_APP_HOST=data-storage
         - PEP_PROXY_APP_PORT=80
         - PEP_PROXY_PORT=1028
         - PEP_PROXY_IDM_HOST=keyrock_idm
         - PEP_PROXY_IDM_SSL_ENABLED=false
         - PEP_PROXY_IDM_PORT=3005
         - PEP_PROXY_APP_ID=b906a991-8854-4281-99c2-6a7108ba25a8
         - PEP_PROXY_USERNAME=pep_proxy_70a14dd6-cc75-47e2-8046-6955dcc45e78
         - PEP_PASSWORD=pep_proxy_5f48004b-96bd-4518-8e86-726938565eda
         - PEP_PROXY_PDP=idm

 #################################################### Mysql/MongoDB GUI Management Tools ####################################################
               
  # phpmyadmin:
  #    image: phpmyadmin
  #    container_name: phpmyadmin
  #    networks:
  #       default:
  #          ipv4_address: 172.18.1.7
  #    environment:
  #       PMA_HOST: mysql_db
  #       PMA_PORT: 3306
  #    ports:
  #       - "8085:80"
  #    restart: always
      
  # mongo_express:
  #    image: mongo-express:latest
  #    ports:
  #       - "8081:8081"
  #    restart: always
  #    environment:
  #       - ME_CONFIG_MONGODB_SERVER=mongo_db
  #       - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
  #       - ME_CONFIG_MONGODB_ADMINUSERNAME=root
  #       - ME_CONFIG_MONGODB_ADMINPASSWORD=secret
  #       - ME_CONFIG_BASICAUTH_USERNAME=admin
  #       - ME_CONFIG_BASICAUTH_PASSWORD=1234
  #       - ME_CONFIG_MONGODB_URL=mongodb://admin:1234@mongo_db:27017/
  #    depends_on:
  #       - mongo_db
  #    networks:
  #       default:
  #          ipv4_address: 172.18.1.20   
  
#################################################### NETWORKS ####################################################
networks:
   default:
      ipam:
         config:
            - subnet: 172.18.1.0/24
#################################################### VOLUMES ####################################################
volumes:
   mysql-db: ~
   mongo-db:
